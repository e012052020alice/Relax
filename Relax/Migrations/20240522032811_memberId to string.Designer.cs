// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Relax.Data;

#nullable disable

namespace Relax.Migrations
{
    [DbContext(typeof(RelaxDbContext))]
    [Migration("20240522032811_memberId to string")]
    partial class memberIdtostring
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Relax.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("EndTime")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("StartTime")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("memberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Relax.Models.AdsDetail", b =>
                {
                    b.Property<int>("AdsDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdsDId"));

                    b.Property<int>("AdsClicks")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdsClicksTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClickMemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikeClicks")
                        .HasColumnType("int");

                    b.Property<int>("adsId")
                        .HasColumnType("int");

                    b.HasKey("AdsDId");

                    b.ToTable("AdsDetail");
                });

            modelBuilder.Entity("Relax.Models.Advertisements", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdId"));

                    b.Property<int?>("AdLoved")
                        .HasColumnType("int");

                    b.Property<string>("AdUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Clicks")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("memberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tripId")
                        .HasColumnType("int");

                    b.HasKey("AdId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("Relax.Models.Analysis", b =>
                {
                    b.Property<int>("AnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnalysisId"));

                    b.Property<DateTime>("DataDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalAds")
                        .HasColumnType("int");

                    b.Property<int>("TotalEnter")
                        .HasColumnType("int");

                    b.Property<int>("TotalLike")
                        .HasColumnType("int");

                    b.Property<int>("TotalSearch")
                        .HasColumnType("int");

                    b.Property<int>("TotalVisitors")
                        .HasColumnType("int");

                    b.HasKey("AnalysisId");

                    b.ToTable("Analysis");
                });

            modelBuilder.Entity("Relax.Models.AnalysisDetail", b =>
                {
                    b.Property<int>("AnalysisDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnalysisDId"));

                    b.Property<int>("AdsClicks")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LikeClicks")
                        .HasColumnType("int");

                    b.Property<int>("SearchClicks")
                        .HasColumnType("int");

                    b.Property<int>("analysisId")
                        .HasColumnType("int");

                    b.Property<string>("memberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnalysisDId");

                    b.ToTable("AnalysisDetail");
                });

            modelBuilder.Entity("Relax.Models.Attractions", b =>
                {
                    b.Property<int>("AttractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttractionId"));

                    b.Property<string>("AttractionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EstimatedStayTime")
                        .HasColumnType("int");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Tag")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TimeCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("XCoordinate")
                        .HasColumnType("int");

                    b.Property<int?>("YCoordinate")
                        .HasColumnType("int");

                    b.Property<string>("memberId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttractionId");

                    b.ToTable("Attractions");
                });

            modelBuilder.Entity("Relax.Models.Points", b =>
                {
                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PointId"));

                    b.Property<string>("ChangeReason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ChangeTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChangeValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RemainingPoints")
                        .HasColumnType("int");

                    b.Property<string>("memberID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PointId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("Relax.Models.RandomTripHistory", b =>
                {
                    b.Property<int>("RandomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandomId"));

                    b.Property<string>("GoogleMapResultLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RandomName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("memberID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RandomId");

                    b.ToTable("RandomTripHistory");
                });

            modelBuilder.Entity("Relax.Models.ScheduleDetails", b =>
                {
                    b.Property<int>("ScheduleDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleDetailsId"));

                    b.Property<int?>("DailyTripNumber")
                        .HasColumnType("int");

                    b.Property<int?>("attractionId")
                        .HasColumnType("int");

                    b.Property<int?>("scheduleId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleDetailsId");

                    b.ToTable("ScheduleDetails");
                });

            modelBuilder.Entity("Relax.Models.Schedules", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("DayNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TotalStayTime")
                        .HasColumnType("int");

                    b.Property<int>("tripID")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Relax.Models.Tags", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("TagName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Relax.Models.Trips", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<string>("TripName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("memberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.ToTable("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
