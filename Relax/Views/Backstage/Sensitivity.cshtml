@section Styles {
    <style>
        .dorne-features-destinations-area {
            padding: 35px 35px;
        }

        .fs-XL {
            font-size: 18px;
        }

        .fs-i {
            font-size: 22px;
        }

        thead {
            background-color: #7643ea;
            color: #fff;
        }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #fbf9ff;
        }

        .table-hover tbody tr:hover {
            background-color: #f3edff
        }

        .tableDorne-btn {
            height: 35px;
            background-color: #7643ea;
            border-radius: 0;
            color: #fff;
            margin-right: 15px;
            font-weight: 600;
            font-size: 15px;
            -webkit-transition-duration: 500ms;
            transition-duration: 500ms;
        }

            .tableDorne-btn:hover, .tableDorne-btn:focus {
                color: #fff;
                background-color: #5d25dd;
                font-weight: 600;
            }
    </style>
}

<div id="app">
    <div class="breadcumb-area bg-img bg-overlay" style="background-image: url(/relax/img/bg-img/hero-1.jpg)">
    </div>
    <div class="dorne-features-destinations-area" id="contact">
        <div class="container-fluid" style="width:75%">
            <!--Table-->
            <div class="row">
                @* 搜尋框 *@
                <div class="col-8 form-group pt-3 d-flex justify-content-end">
                    @* <label style="text-align:right">篩選關鍵字: </label> *@
                </div>
                <div class="col-4 form-group pt-3 d-flex justify-content-end">
                    <input type="text" class="form-control" v-model="filter" placeholder="請輸入篩選關鍵字" @@keyup.enter="filterA()" />
                </div>
            </div>
            <div class="row">
                @* 資料表 *@
                <table class="table table-striped table-hover text-center">
                    <thead>
                        <tr>
                            <td>景點編號</td>
                            <td>會員編號</td>
                            <td>景點名稱</td>
                            <td>景點描述</td>
                            <td>編輯</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="aDTO in aDTOs">
                            @* 檢視資料 *@
                            <template v-if="aDTO.Edit==true">
                                <td><label v-text="aDTO.attractionId"></label></td>
                                <td><label v-text="aDTO.memberId"></label></td>
                                <td><input type="text" v-model="aDTO.attractionName" /></td>
                                <td><input type="text" v-model="aDTO.description" /></td>
                                <td>
                                    <button type="button" class="btn btn-success" @@click="update(aDTO)">更新</button>
                                    <button type="button" class="btn btn-secondary" @@click="cancel()">取消</button>
                                </td>
                            </template>
                            @* 編輯頁面 *@
                            <template v-else>
                                <td><label v-text="aDTO.attractionId"></label></td>
                                <td><label v-text="aDTO.memberId"></label></td>
                                <td><label v-text="aDTO.attractionName"></label></td>
                                <td><label v-text="aDTO.description"></label></td>
                                <td>
                                    <button type="button" class="btn btn-primary" @@click="edit(aDTO.attractionId)">編輯</button>
                                    <button type="button" class="btn btn-danger" @@click="deleteA(aDTO.attractionId)">刪除</button>
                                </td>
                            </template>

                        </tr>
                    </tbody>
                </table>
            </div>
            <!--End-->
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.8/axios.min.js" integrity="sha512-PJa3oQSLWRB7wHZ7GQ/g+qyv6r4mbuhmiDb8BjSFZ8NZ2a42oTtAq5n0ucWAwcQDlikAtkub+tPVCw4np27WCg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/vue@3.4.25/dist/vue.global.js"></script>
    <script>
        var baseAddress = "https://localhost:7238";
        var baseAddressB = "https://localhost:7238";
        var vueApp = {
            data() {
                return {
                    filter: "",
                    attractionNameOld: "",
                    descriptionOld: "",
                    tagOld: "",
                    aDTOs: [],
                }
            },
            methods: {
                filterA: function () {
                    // alert("filterA");
                    var _this = this;
                    var p = {};
                    p.attractionId = isNaN(Number(this.filter)) ? -1 : Number(this.filter);
                    p.memberId = p.attractionName = p.description = p.tag = this.filter;
                    axios.post("https://localhost:7238/api/Attraction/FilterNoOk", p).then(response => {
                        // console.log(response.data);
                        _this.aDTOs = response.data;
                        for (let n = 0; n < _this.aDTOs.length; n++) {
                            _this.aDTOs[n].Edit = false;
                        }
                    }).catch(err => alert(err));

                },
                update: function (aDTO) {
                    // alert("更新");
                    let _this = this;
                    const id = aDTO.attractionId;
                    const body = {
                        attractionId: aDTO.attractionId,
                        attractionName: aDTO.attractionName,
                        description: aDTO.description,
                        tag: aDTO.tag,
                        isApproved: true
                    };
                    axios.put(`${baseAddress}/api/Attraction/${id}`, body).then(response => {
                        alert(response.data);
                        if (aDTO.Edit == true) {
                            aDTO.Edit = false;
                            _this.filterA();
                        }
                    }).catch(err => console.log(`更新失敗:${err}`));
                },
                cancel: function () {
                    // alert("取消");
                    let _this = this;
                    for (let n = 0; n < _this.aDTOs.length; n++) {
                        let aDTO = _this.aDTOs[n];
                        if (aDTO.Edit == true) {
                            aDTO.Edit = false;
                            aDTO.attractionName = _this.attractionNameOld;
                            aDTO.description = _this.descriptionOld;
                            aDTO.tag = _this.tagOld;
                        }
                    }
                },
                edit: function (attractionId) {
                    // alert("edit");
                    let _this = this;
                    for (let n = 0; n < _this.aDTOs.length; n++) {
                        let aDTO = _this.aDTOs[n];
                        if (attractionId == aDTO.attractionId) {
                            aDTO.Edit = true;
                            _this.attractionNameOld = aDTO.attractionName;
                            _this.descriptionOld = aDTO.description;
                            _this.tagOld = aDTO.tag;
                        }
                    }

                },
                deleteA: function (attractionId) {
                    // alert("deleteA");
                    let _this = this;
                    let ret = confirm("是否確定刪除?");
                    if (ret == true) {
                        axios.delete(`${baseAddress}/api/Attraction/${attractionId}`).then(response => {
                            alert(response.data);
                            _this.filterA();
                        }).catch(err => console.log(`刪除失敗:${err}`));
                    }
                }
            },
            mounted: function () {
                _this = this;
                _this.filterA();
            },
        };
        var app = Vue.createApp(vueApp).mount('#app');
    </script>
}